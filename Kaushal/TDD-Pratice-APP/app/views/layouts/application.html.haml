!!!
%html
  %head
    %title Popsocket
    = stylesheet_link_tag    "application", media: "all", "data-turbolinks-track" => true
    = javascript_include_tag "application", "data-turbolinks-track" => true
    = csrf_meta_tags
  %body
    %nav.navbar.navbar-default{:role => "navigation"}
      .container-fluid
        / Brand and toggle get grouped for better mobile display
        .navbar-header
          %button.navbar-toggle{"data-target" => "#bs-example-navbar-collapse-1", "data-toggle" => "collapse", :type => "button"}
            %span.sr-only Toggle navigation
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
          %a.navbar-brand{:href => root_path} Popsocket Admin
        - if current_admin.blank?
          %a.navbar-brand.pull-right{:href => new_session_path(:admin)} Login
        / Collect the nav links, forms, and other content for toggling
        - if current_admin
          #bs-example-navbar-collapse-1.collapse.navbar-collapse
            %ul.nav.navbar-nav
              %li= link_to "Users", admins_path()
              %li= link_to "Product", products_path()
              %li= link_to "Category", categories_path()
              %li.dropdown
                %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
                  Template
                  %b.caret
                %ul.dropdown-menu
                  - Product.child_products.each do |product|
                    %li
                      = link_to product.name, product_product_images_path(product)
              %li= link_to "Affiliate", '#'
            %ul.nav.navbar-nav.navbar-right
              %li.dropdown
                %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
                  Logged In As #{current_admin.email}
                  %b.caret
                %ul.dropdown-menu
                  %li
                    = link_to "Account Settings", edit_admin_path(current_admin)
                  %li.divider
                  %li
                    = link_to "Logout", :destroy_admin_session, method: :delete
    .wrap.container
      - if notice
        .alert.alert-success= notice
      - if alert
        .alert.alert-danger= alert
      = yield